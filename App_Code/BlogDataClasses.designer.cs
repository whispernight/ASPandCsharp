#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Auth564")]
public partial class BlogDataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
    partial void InsertBlog(IITBlog.Classes.Blog instance);
    partial void UpdateBlog(IITBlog.Classes.Blog instance);
    partial void DeleteBlog(IITBlog.Classes.Blog instance);
  #endregion
	
	public BlogDataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Auth564"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public BlogDataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BlogDataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BlogDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BlogDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<IITBlog.Classes.Blog> Blogs
	{
		get
		{
			return this.GetTable<IITBlog.Classes.Blog>();
		}
	}
}
namespace IITBlog.Classes
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog")]
	public partial class Blog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogID;
		
		private string _BlogText;
		
		private string _Mood;
		
		private string _UserName;
		
		private System.Nullable<System.Guid> _UserID;
		
		private System.Nullable<System.Guid> _ApplicationID;
		
		private System.DateTime _RecCreationTime;
		
		private string _ApplicationName;
		
		private System.Nullable<int> _PeopleID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogIDChanging(int value);
    partial void OnBlogIDChanged();
    partial void OnBlogTextChanging(string value);
    partial void OnBlogTextChanged();
    partial void OnMoodChanging(string value);
    partial void OnMoodChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnApplicationIDChanging(System.Nullable<System.Guid> value);
    partial void OnApplicationIDChanged();
    partial void OnRecCreationTimeChanging(System.DateTime value);
    partial void OnRecCreationTimeChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnPeopleIDChanging(System.Nullable<int> value);
    partial void OnPeopleIDChanged();
    #endregion
		
		public Blog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlogID
		{
			get
			{
				return this._BlogID;
			}
			set
			{
				if ((this._BlogID != value))
				{
					this.OnBlogIDChanging(value);
					this.SendPropertyChanging();
					this._BlogID = value;
					this.SendPropertyChanged("BlogID");
					this.OnBlogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogText", DbType="VarChar(250)")]
		public string BlogText
		{
			get
			{
				return this._BlogText;
			}
			set
			{
				if ((this._BlogText != value))
				{
					this.OnBlogTextChanging(value);
					this.SendPropertyChanging();
					this._BlogText = value;
					this.SendPropertyChanged("BlogText");
					this.OnBlogTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mood", DbType="VarChar(50)")]
		public string Mood
		{
			get
			{
				return this._Mood;
			}
			set
			{
				if ((this._Mood != value))
				{
					this.OnMoodChanging(value);
					this.SendPropertyChanging();
					this._Mood = value;
					this.SendPropertyChanged("Mood");
					this.OnMoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(250)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecCreationTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecCreationTime
		{
			get
			{
				return this._RecCreationTime;
			}
			set
			{
				if ((this._RecCreationTime != value))
				{
					this.OnRecCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._RecCreationTime = value;
					this.SendPropertyChanged("RecCreationTime");
					this.OnRecCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="VarChar(MAX)")]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeopleID", DbType="Int")]
		public System.Nullable<int> PeopleID
		{
			get
			{
				return this._PeopleID;
			}
			set
			{
				if ((this._PeopleID != value))
				{
					this.OnPeopleIDChanging(value);
					this.SendPropertyChanging();
					this._PeopleID = value;
					this.SendPropertyChanged("PeopleID");
					this.OnPeopleIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
